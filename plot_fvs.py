# seaborn barplot that shows the Feature map Vulnerability Score~(FVS) of the 16 features
# please plot the fig, the x-axis is the feature map index, and the y-axis is the FVS
# please use the seaborn package to plot the barplot
# you should consider decide the min of the y-axis and the max of the y-axis
# set_ylim(min(FVS_list), max(FVS_list))

import numpy as np
import torch
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
from matplotlib import ticker

a = np.array([0.063211724, 0.07588459, 0.1689891, 0.1382059])
b = np.array([0.08006587, 0.09536825, 0.21270274, 0.14719445])
c = np.array([0.08490315, 0.099840075, 0.22263247, 0.14802198])
d = np.array([0.0862417, 0.101136446, 0.2260546, 0.14781924])

# mnist lenet5
# a = np.array([0.003932226, 0.012292949, 0.010849603, 0.01609997, 0.01926331, 0.02461078])
# b = np.array([0.0050662933, 0.0146112135, 0.012831837, 0.020442212, 0.026090339, 0.031548947])
# c = np.array([0.006133741, 0.016993172, 0.014855664, 0.024454558, 0.03250566, 0.037946228])
# d = np.array([0.006920666, 0.018789995, 0.016361915, 0.027397746, 0.037231307, 0.042615257])

# svhn lenet5
# a = np.array([0.00048806594, 0.00018958833, 4.9720274e-08, 0.0002397073, 0.00018376988, 0.0003169391])
# b = np.array([0.0019337195, 0.00073477573, 1.9103989e-07, 0.0009318472, 0.000733139, 0.0012603132])
# c = np.array([0.0042980197, 0.0015862334, 4.1624216e-07, 0.0020373238, 0.0016447887, 0.0028156703])
# d = np.array([0.0075240075, 0.0027026127, 7.404965e-07, 0.0035269482, 0.0029145565, 0.004960733])

# cifar10 resnet20
a = np.array([0.00026283148, 0.00017955885, 2.9516821e-05, 0.00015663164, 1.640098e-05, 4.700337e-05, 0.00013760851, 1.36442295e-05, 3.6009194e-05, 0.0003276387, 0.00038988757, 0.0013014053, 0.00012984851, 0.0003903581, 9.23168e-05, 0.000112574475])
b = np.array([0.0010413197, 0.000709733, 0.00011698849, 0.00062087306, 6.503566e-05, 0.00018558804, 0.00054095546, 5.4243315e-05, 0.0001424944, 0.0012947001, 0.0015426402, 0.00516008, 0.00051475747, 0.001539622, 0.00036248736, 0.0004413165])

c = np.array([0.002317985, 0.0015764997, 0.00026091607, 0.0013848426, 0.00014511684, 0.00041310414, 0.0011973196, 0.00012142023, 0.00031723417, 0.0028697103, 0.0034301965, 0.011496788, 0.0011477006, 0.0034108527, 0.0007998026, 0.00096956565])
d = np.array([0.0040687397, 0.0027587062, 0.00045978336, 0.0024386912, 0.00025589066, 0.00072734995, 0.0020947596, 0.00021480685, 0.0005579818, 0.0049993233, 0.0060147876, 0.020181606, 0.0020185087, 0.0059617204, 0.0013933755, 0.0016774437])

a_name = ['mutation-1'] * len(a)
# a = [x*0.01 for x in a]

# b = np.array([0.0010413197, 0.000709733, 0.00011698849, 0.00062087306, 6.503566e-05, 0.00018558804, 0.00054095546, 5.4243315e-05, 0.0001424944, 0.0012947001, 0.0015426402, 0.00516008, 0.00051475747, 0.001539622, 0.00036248736, 0.0004413165])
b_name = ['mutation-2'] * len(a)
# b = [x*0.01 for x in b]
# c = np.array([0.002317985, 0.0015764997, 0.00026091607, 0.0013848426, 0.00014511684, 0.00041310414, 0.0011973196, 0.00012142023, 0.00031723417, 0.0028697103, 0.0034301965, 0.011496788, 0.0011477006, 0.0034108527, 0.0007998026, 0.00096956565])
c_name = ['mutation-3'] * len(a)
# c = [x*0.01 for x in c]
# d = np.array([0.0040687397, 0.0027587062, 0.00045978336, 0.0024386912, 0.00025589066, 0.00072734995, 0.0020947596, 0.00021480685, 0.0005579818, 0.0049993233, 0.0060147876, 0.020181606, 0.0020185087, 0.0059617204, 0.0013933755, 0.0016774437])
d_name = ['mutation-4'] * len(a)
# d = [x*0.01 for x in d]

idx = [i for i in range(1,len(a)+1)] * 4
# print(len(idx))

data = np.concatenate([a,b,c,d], axis=0)
name = np.concatenate([a_name, b_name, c_name, d_name], axis=0)
# print(name)

plt.figure(figsize=(8,4))
fig, ax = plt.subplots()
table = pd.DataFrame({'FVS value':data, 'mutation strength':name, 'idx':idx})
# ax.yaxis.set_major_formatter(ticker.PercentFormatter(xmax=1, decimals=1))
sns.set_theme(style='whitegrid')
# plt.ylim((min(a), max(d)))
# plt.xticks(range(1,33,2))
sns.barplot(data = table, x = 'idx', y='FVS value', hue='mutation strength', palette='Reds')
plt.xticks(range(0,len(a)+1))
plt.savefig('./deepfeature/rq1/FVS_cifar10_resnet20.pdf', bbox_inches='tight')